# pages/1_üìù_Planejamento.py
import streamlit as st
import time
from pathlib import Path

def mostrar_texto_pausado(texto, velocidade=0.005):
    """Exibe texto letra por letra com efeito de digita√ß√£o"""
    placeholder = st.empty()
    texto_completo = ""
    for char in texto:
        texto_completo += char
        placeholder.markdown(texto_completo + "‚ñå")
        time.sleep(velocidade)
    placeholder.markdown(texto_completo)

def se√ß√£o_interativa(titulo, conteudo, quiz=None, opcoes_expans√£o=None):
    with st.expander(f"üìå {titulo}", expanded=True):
        if isinstance(conteudo, str):
            mostrar_texto_pausado(conteudo)
        else:
            for item in conteudo:
                st.write(item)
                
        if quiz:
            resposta = st.radio(
                quiz["pergunta"],
                options=quiz["opcoes"],
                index=None
            )
            if resposta:
                if resposta == quiz["resposta_correta"]:
                    st.success("‚úÖ Correto! " + quiz["feedback_positivo"])
                else:
                    st.error("‚ùå Tente novamente. " + quiz["feedback_negativo"])
        
        if opcoes_expans√£o:
            opcao = st.selectbox(
                "O que voc√™ gostaria de explorar sobre este t√≥pico?",
                ["Selecione..."] + list(opcoes_expans√£o.keys())
            )
            if opcao != "Selecione...":
                st.info(opcoes_expans√£o[opcao])

def main():
    st.title("üìù Planejamento: Fundamentos de Credit Scoring")
    
    # Menu de navega√ß√£o interno
    st.sidebar.header("Navega√ß√£o do Cap√≠tulo")
    topico = st.sidebar.radio(
        "Ir para:",
        ["Introdu√ß√£o", "Conceitos B√°sicos", "Modelagem", "Roteiro Pr√°tico"]
    )
    
    if topico == "Introdu√ß√£o":
        st.header("üß≠ Introdu√ß√£o ao Risco de Cr√©dito")
        
        se√ß√£o_interativa(
            "O que √© Risco de Cr√©dito?",
            "Risco de cr√©dito √© a possibilidade de uma parte n√£o cumprir suas obriga√ß√µes financeiras conforme acordado. √â como avaliar 'qu√£o arriscado' √© emprestar dinheiro para algu√©m.",
            quiz={
                "pergunta": "Qual destes N√ÉO √© um exemplo de risco de cr√©dito?",
                "opcoes": [
                    "Atraso no pagamento de um empr√©stimo",
                    "Varia√ß√£o nas taxas de juros do mercado",
                    "Inadimpl√™ncia em cart√£o de cr√©dito"
                ],
                "resposta_correta": "Varia√ß√£o nas taxas de juros do mercado",
                "feedback_positivo": "Exato! Varia√ß√£o de juros √© risco de mercado, n√£o de cr√©dito.",
                "feedback_negativo": "Essa op√ß√£o refere-se a outro tipo de risco financeiro."
            }
        )
        
        se√ß√£o_interativa(
            "Por que medir o Risco de Cr√©dito?",
            [
                "‚úîÔ∏è Reduz perdas financeiras para institui√ß√µes",
                "‚úîÔ∏è Oferece taxas justas conforme o perfil do cliente",
                "‚úîÔ∏è Permite acesso mais democr√°tico ao cr√©dito",
                "‚úîÔ∏è Aumenta a estabilidade do sistema financeiro"
            ],
            opcoes_expans√£o={
                "Exemplo Pr√°tico": "Bancos usam scoring para definir limites de cart√£o: clientes com baixo risco recebem limites maiores e taxas menores.",
                "Impacto Social": "Um bom sistema de scoring pode incluir pessoas sem hist√≥rico credit√≠cio tradicional."
            }
        )
    
    elif topico == "Conceitos B√°sicos":
        st.header("üìä Conceitos Fundamentais")

        with st.expander(f"üìå Os Cs do Cr√©dito", expanded=False):
        # Funciona localmente e no Cloud
            image_path = Path(__file__).parent.parent / "static" / "5c.jpg"
            if image_path.exists():
                st.image(str(image_path), caption="Os 5 Cs do cr√©dito")
            else:
                st.error(f"Arquivo n√£o encontrado em: {image_path}")

        with st.expander(f"üìå Tipos de Credit Scoring", expanded=False):
            st.title("Scorecard")
            image_path = Path(__file__).parent.parent / "static" / "scorecard.jpg"
            if image_path.exists():
                st.image(str(image_path), caption="Os 5 Cs do cr√©dito")
            else:
                st.error(f"Arquivo n√£o encontrado em: {image_path}")
 
            st.title("Equa√ß√£o")
            st.latex(r'''
            Score = 600 + 
            \begin{cases} 
            50 \times \text{(idade > 30)} \\
            -30 \times \text{(d√≠vidas > renda)} \\
            20 \times \text{(tem conta banc√°ria)}
            \end{cases}
            ''')
            st.caption("Exemplo simplificado de como vari√°veis s√£o ponderadas")            

        
        se√ß√£o_interativa(
            "Credit Scores: Seu N√∫mero M√°gico",
            "Um credit score √© como uma nota que resume seu risco de cr√©dito. Varia tipicamente de 0 a 1000 - quanto maior, melhor!",
            quiz={
                "pergunta": "Qual fator geralmente N√ÉO afeta seu credit score?",
                "opcoes": [
                    "Hist√≥rico de pagamentos",
                    "Cor do seu cart√£o de cr√©dito",
                    "Endividamento atual"
                ],
                "resposta_correta": "Cor do seu cart√£o de cr√©dito",
                "feedback_positivo": "Isso mesmo! Caracter√≠sticas f√≠sicas n√£o influenciam.",
                "feedback_negativo": "Reveja os fatores que comp√µem um score tradicional."
            }
        )
                           
        se√ß√£o_interativa(
            "Probabilidade e Erros de Decis√£o",
            "Nenhum modelo √© perfeito. Sempre h√°:\n\n"
            "- Falsos positivos: clientes 'bons' classificados como ruins\n"
            "- Falsos negativos: clientes 'ruins' classificados como bons\n\n"
            "O desafio √© balancear esses erros."
        )
    
    elif topico == "Modelagem":
        st.header("ü§ñ Como os Modelos Funcionam?")
        
        with st.expander("Premissas B√°sicas", expanded=False):
            st.markdown("""
            **1. Futuro se parece [muito] com o passado.**  
            **2. Os dados refletem a informa√ß√£o fielmente.**  
            **3. A amostra √© representativa, dando possibilidade de generaliza√ß√£o.**  
              
            Al√©m disso...  
            **4. Padroniza√ß√£o:** Todos os clientes s√£o avaliados pelos mesmos crit√©rios  
            **5. Objetividade:** Decis√µes baseadas apenas em dados, n√£o em opini√µes  
            **6. Atualiza√ß√£o:** Modelos s√£o revisados periodicamente  
            """)

            image_path2 = Path(__file__).parent.parent / "static" / "model.png"
            if image_path2.exists():
                st.image(str(image_path2), caption="Desenvolvimento e aplica√ß√£o de um modelo de Credit Scoring")
            else:
                st.error(f"Arquivo n√£o encontrado em: {image_path}")
    
    elif topico == "Roteiro Pr√°tico":
        st.header("üó∫Ô∏è Roteiro para Desenvolver um Modelo")
        
        passos = st.session_state.get("passos", [False]*6)
        
        with st.form("roteiro_form"):
            st.write("**Marque os passos j√° completados:**")
            passos[0] = st.checkbox("1. Coleta de dados hist√≥ricos", value=passos[0])
            passos[1] = st.checkbox("2. An√°lise explorat√≥ria", value=passos[1])
            passos[2] = st.checkbox("3. Sele√ß√£o de vari√°veis", value=passos[2])
            passos[3] = st.checkbox("4. Desenvolvimento do modelo", value=passos[3])
            passos[4] = st.checkbox("5. Valida√ß√£o", value=passos[4])
            passos[5] = st.checkbox("6. Implementa√ß√£o", value=passos[5])
            
            if st.form_submit_button("Salvar Progresso"):
                st.session_state.passos = passos
                st.success("Progresso atualizado!")
        
        progresso = sum(passos)/len(passos)
        st.progress(progresso)
        st.caption(f"Voc√™ completou {int(progresso*100)}% do roteiro")

    st.markdown(""" Navegue por esta se√ß√£o no menu ao lado para continuar tratando do Plaejamento ou...""")
    # üöÄ Link para a pr√≥xima p√°gina
    st.page_link("pages/3_üöÄ_Coleta_de_Dados.py", label="‚û°Ô∏è Ir para a pr√≥xima p√°gina: Coleta de Dados", icon="üìù")


if __name__ == "__main__":
    main()
